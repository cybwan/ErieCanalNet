apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ecnet-bridge
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
    app: ecnet-bridge
    ecnetName: {{ .Values.ecnet.ecnetName }}
spec:
  selector:
    matchLabels:
      app: ecnet-bridge
  template:
    metadata:
      labels:
        {{- include "ecnet.labels" . | nindent 8 }}
        app: ecnet-bridge
  {{- if .Values.ecnet.ecnetController.podLabels }}
  {{- toYaml .Values.ecnet.ecnetController.podLabels | nindent 8 }}
  {{- end }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '9091'
    spec:
      {{- if .Values.ecnet.ecnetController.affinity }}
      affinity:
      {{- toYaml .Values.ecnet.ecnetController.affinity | nindent 8 }}
      {{- end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccountName: {{ .Release.Name }}
      initContainers:
        - name: init
          image: {{ .Values.ecnet.curlImage }}
          command: [ "curl", "http://ecnet-bootstrap.{{ include "ecnet.namespace" . }}:9091/healthz", "--connect-timeout", "2", "--retry", "50", "--retry-connrefused", "--retry-delay", "5" ]
      containers:
        - name: proxy
          image: {{ $.Values.ecnet.proxyImage }}
          imagePullPolicy: {{ $.Values.ecnet.image.pullPolicy }}
          command: [ 'pipy' ]
          args: [
            "--admin-port=6060",
            "--log-level={{.Values.ecnet.proxyLogLevel}}",
            "http://ecnet-controller.{{ include "ecnet.namespace" . }}:{{ .Values.ecnet.proxyServerPort }}/repo/ecnet/proxy.bridge.ecnet/",
          ]
          ports:
            - name: "repo"
              containerPort: 6060
              hostPort: 6060
          env:
            - name: CNI_BRIDGE_ETH
              value: {{ .Values.ecnet.ecnetBridge.cni.hostCniBridgeEth }}
          securityContext:
            runAsUser: 1600
        - name: bridge
          image: "{{ include "ecnetBridge.image" . }}"
          imagePullPolicy: {{ .Values.ecnet.image.pullPolicy }}
          ports:
            - name: "admin-port"
              containerPort: 15000
            - name: "metrics"
              containerPort: 9091
          command: ['/ec/ecnet-bridge']
          args: [
            "--verbosity", "{{.Values.ecnet.controllerLogLevel}}",
            "--ecnet-namespace", "{{ include "ecnet.namespace" . }}",
            "--ecnet-version", "{{ .Chart.AppVersion }}",
            "--ecnet-service-account", "{{ .Release.Name }}",
            "--ecnet-name", "{{.Values.ecnet.ecnetName}}",
            "--trust-domain", "{{.Values.ecnet.trustDomain}}",
            "--bridge-eth={{ .Values.ecnet.ecnetBridge.cni.hostCniBridgeEth }}",
            "--kernel-tracing={{ .Values.ecnet.ecnetBridge.kernelTracing }}",
          ]
          lifecycle:
            preStop:
              exec:
                command:
                  - make
                  - -k
                  - clean
          resources:
            limits:
              cpu: "{{.Values.ecnet.ecnetBridge.resource.limits.cpu}}"
              memory: "{{.Values.ecnet.ecnetBridge.resource.limits.memory}}"
            requests:
              cpu: "{{.Values.ecnet.ecnetBridge.resource.requests.cpu}}"
              memory: "{{.Values.ecnet.ecnetBridge.resource.requests.memory}}"
          readinessProbe:
            initialDelaySeconds: 1
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /health/ready
              port: 9091
          livenessProbe:
            initialDelaySeconds: 1
            timeoutSeconds: 5
            httpGet:
              scheme: HTTP
              path: /health/alive
              port: 9091
          env:
            - name: BRIDGE_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          securityContext:
            privileged: true
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - operator: Exists
    {{- if .Values.ecnet.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.ecnet.imagePullSecrets | indent 8 }}
    {{- end }}
      {{- if .Values.ecnet.ecnetController.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.ecnet.ecnetController.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.ecnet.ecnetController.tolerations }}
      tolerations:
      {{- toYaml .Values.ecnet.ecnetController.tolerations | nindent 8 }}
      {{- end }}