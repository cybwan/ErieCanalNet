apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-preinstall
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
rules:
  - apiGroups: ["apps"]
    resources: ["deployments"]
    verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-preinstall
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-preinstall
    namespace: {{ include "ecnet.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-preinstall
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-preinstall
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-preinstall
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  backoffLimit: 0
  template:
    metadata:
      name: {{ .Release.Name }}-preinstall
      labels:
        {{- include "ecnet.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Release.Name }}-preinstall
      restartPolicy: Never
      containers:
        - name: preinstall
          image: "{{ include "ecnetPreinstall.image" . }}"
          imagePullPolicy: {{ .Values.ecnet.image.pullPolicy }}
          command: ['/ecnet-preinstall']
          args:
            - --verbosity={{ .Values.ecnet.controllerLogLevel }}
            - --enforce-single-ecnet={{ .Values.ecnet.enforceSingleEcnet }}
            - --namespace={{ include "ecnet.namespace" . }}
{{- if .Values.ecnet.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.ecnet.imagePullSecrets | indent 8 }}
{{- end }}
      {{- if .Values.ecnet.preinstall.affinity }}
      affinity:
      {{- toYaml .Values.ecnet.preinstall.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.ecnet.preinstall.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.ecnet.preinstall.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.ecnet.preinstall.tolerations }}
      tolerations:
      {{- toYaml .Values.ecnet.preinstall.tolerations | nindent 8 }}
      {{- end }}
