apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-cleanup
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
rules:
  - apiGroups: ["config.flomesh.io"]
    resources: ["ecnetconfigs"]
    verbs: ["delete"]
  - apiGroups: [ "" ]
    resources: [ "secrets"]
    verbs: ["delete"]
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["get", "list", "create", "delete", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-cleanup
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-cleanup
    namespace: {{ include "ecnet.namespace" . }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-cleanup
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-cleanup
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-cleanup
  namespace: {{ include "ecnet.namespace" . }}
  labels:
    {{- include "ecnet.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: post-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-cleanup
      labels:
        {{- include "ecnet.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ .Release.Name }}-cleanup
      restartPolicy: Never
      containers:
        # NOTE: The Helm post-delete hook's garbage-collector should always match the deletion logic in the ecnet cli command `ecnet uninstall cluster-wide-resources`.
        - name: garbage-collector
          image: "{{ include "ecnetCRDs.image" . }}"
          imagePullPolicy: {{ .Values.ecnet.image.pullPolicy }}
          # NOTE: any changes to resources being cleaned up should be updated in the lists/commands in the uninstall guide (https://github.com/flomesh-io/ErieCanal-docs/blob/main/content/docs/guides/uninstall.md#uninstall-ecnet-control-plane-and-remove-user-provided-resources) and the uninstall troubleshooting guide (https://github.com/flomesh-io/ErieCanal-docs/blob/main/content/docs/guides/troubleshooting/uninstall.md)
          command:
            - sh
            - -c
            - >
             kubectl replace -f /ecnet-crds;
             kubectl delete --ignore-not-found ecnetconfig -n '{{ include "ecnet.namespace" . }}' ecnet-config;
             kubectl delete --ignore-not-found secret -n '{{ include "ecnet.namespace" . }}' {{ .Values.ecnet.caBundleSecretName }};
{{- if .Values.ecnet.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.ecnet.imagePullSecrets | indent 8 }}
{{- end }}
      {{- if .Values.ecnet.cleanup.affinity }}
      affinity:
      {{- toYaml .Values.ecnet.cleanup.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.ecnet.cleanup.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.ecnet.cleanup.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.ecnet.cleanup.tolerations }}
      tolerations:
      {{- toYaml .Values.ecnet.cleanup.tolerations | nindent 8 }}
      {{- end }}

